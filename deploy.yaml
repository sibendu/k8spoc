apiVersion: v1
kind: ConfigMap
metadata:
  name: mongocfg
data:
  # property-like keys; each key maps to a simple value
  DB_HOST: "mongo-nodeport-svc"
  DB_PORT: "27017"
  DB_NAME: "test"
  AWS_ACCESS_KEY: "<access key>"
  AWS_SECRET: "<secret>"
  KINESIS_STREAM_NAME: "poc-stream"
  KINESIS_PARTITION_KEY: "poc-partition-key"  
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: service1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: service1
  template:
    metadata:
      labels:
        app: service1
    spec:
      containers:
        - name: service1
          image: sibendu/service1
          ports:
            - containerPort: 8080
          env:
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: mongocfg          
                  key: DB_HOST               
            - name: DB_PORT
              valueFrom:
                configMapKeyRef:
                  name: mongocfg
                  key: DB_PORT              		
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: mongocfg
                  key: DB_NAME              		
            - name: AWS_ACCESS_KEY
              valueFrom:
                configMapKeyRef:
                  name: mongocfg
                  key: AWS_ACCESS_KEY              		
            - name: AWS_SECRET
              valueFrom:
                configMapKeyRef:
                  name: mongocfg
                  key: AWS_SECRET              		
            - name: KINESIS_STREAM_NAME
              valueFrom:
                configMapKeyRef:
                  name: mongocfg
                  key: KINESIS_STREAM_NAME              		
            - name: KINESIS_PARTITION_KEY
              valueFrom:
                configMapKeyRef:
                  name: mongocfg
                  key: KINESIS_PARTITION_KEY
          imagePullPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: service1
spec:
  type: NodePort
  selector:
    app: service1
  ports:
    - port: 8080
      targetPort: 8080
      nodePort: 31080
---     
apiVersion: apps/v1
kind: Deployment
metadata:
  name: service2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: service2
  template:
    metadata:
      labels:
        app: service2
    spec:
      containers:
        - name: service2
          image: sibendu/service2
          ports:
            - containerPort: 8080
          env:
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: mongocfg
                  key: DB_HOST              
            - name: DB_PORT
              valueFrom:
                configMapKeyRef:
                  name: mongocfg
                  key: DB_PORT              
          imagePullPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: service2
spec:
  type: NodePort
  selector:
    app: service2
  ports:
    - port: 8080
      targetPort: 8080
      nodePort: 31081

